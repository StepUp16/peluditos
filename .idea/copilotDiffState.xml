<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/veterinaria/peluditos/ClienteMainActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/veterinaria/peluditos/ClienteMainActivity.java" />
              <option name="originalContent" value="package com.veterinaria.peluditos;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.Menu;&#10;import android.view.MenuItem;&#10;import android.view.View;&#10;import android.widget.Toast;&#10;import android.widget.Toolbar;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;&#10;public class ClienteMainActivity extends AppCompatActivity {&#10;&#10;    private FirebaseAuth mAuth;&#10;    private SessionManager sessionManager;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.home_cliente); // Layout específico para clientes&#10;&#10;        Toolbar toolbar = findViewById(R.id.toolbar);&#10;        setSupportActionBar(toolbar);&#10;&#10;        sessionManager = new SessionManager(this);&#10;        mAuth = FirebaseAuth.getInstance();&#10;&#10;        // Mostrar mensaje de bienvenida para cliente&#10;        Toast.makeText(this, &quot;¡Bienvenido Cliente!&quot;, Toast.LENGTH_LONG).show();&#10;&#10;        // Aquí puedes agregar funcionalidades específicas para clientes&#10;        // Por ejemplo: agendar citas, ver historial de mascotas, etc.&#10;    }&#10;&#10;    // Método para cerrar sesión (opcional)&#10;    public void cerrarSesion(View view) {&#10;        mAuth.signOut();&#10;        Intent intent = new Intent(this, MainActivity.class);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;    @Override&#10;    public boolean onCreateOptionsMenu(Menu menu) {&#10;        getMenuInflater().inflate(R.menu.menu_superior, menu);&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(MenuItem item) {&#10;        int itemId = item.getItemId();&#10;&#10;        if (itemId == R.id.mapa_google) {&#10;            // Navegación al mapa (sin cerrar esta pantalla para una mejor UX)&#10;            Intent intent = new Intent(this, maps_google.class);&#10;            startActivity(intent);&#10;            return true;&#10;        } else if (itemId == R.id.menu_logout) {&#10;            // 3. Lógica de cierre de sesión completa&#10;            mAuth.signOut();&#10;            sessionManager.logoutUser();&#10;&#10;            Intent intent = new Intent(ClienteMainActivity.this, Login_Peluditos.class);&#10;            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;            startActivity(intent);&#10;            finish();&#10;            return true;&#10;        }else if (itemId == R.id.perfil) {&#10;            // Navegación al perfil (sin cerrar esta pantalla para una mejor UX)&#10;            Intent intent = new Intent(this, AdminPerfil.class);&#10;            startActivity(intent);&#10;            return true;&#10;        }&#10;&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.veterinaria.peluditos;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.Menu;&#10;import android.view.MenuItem;&#10;import android.view.View;&#10;import android.widget.Toast;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;&#10;public class ClienteMainActivity extends AppCompatActivity {&#10;&#10;    private FirebaseAuth mAuth;&#10;    private SessionManager sessionManager;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.home_cliente); // Layout específico para clientes&#10;&#10;        Toolbar toolbar = findViewById(R.id.toolbar);&#10;        setSupportActionBar(toolbar);&#10;&#10;        sessionManager = new SessionManager(this);&#10;        mAuth = FirebaseAuth.getInstance();&#10;&#10;        // Mostrar mensaje de bienvenida para cliente&#10;        Toast.makeText(this, &quot;¡Bienvenido Cliente!&quot;, Toast.LENGTH_LONG).show();&#10;&#10;        // Aquí puedes agregar funcionalidades específicas para clientes&#10;        // Por ejemplo: agendar citas, ver historial de mascotas, etc.&#10;    }&#10;&#10;    // Método para cerrar sesión (opcional)&#10;    public void cerrarSesion(View view) {&#10;        mAuth.signOut();&#10;        Intent intent = new Intent(this, MainActivity.class);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;    @Override&#10;    public boolean onCreateOptionsMenu(Menu menu) {&#10;        getMenuInflater().inflate(R.menu.menu_superior, menu);&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(MenuItem item) {&#10;        int itemId = item.getItemId();&#10;&#10;        if (itemId == R.id.mapa_google) {&#10;            // Navegación al mapa (sin cerrar esta pantalla para una mejor UX)&#10;            Intent intent = new Intent(this, maps_google.class);&#10;            startActivity(intent);&#10;            return true;&#10;        } else if (itemId == R.id.menu_logout) {&#10;            // 3. Lógica de cierre de sesión completa&#10;            mAuth.signOut();&#10;            sessionManager.logoutUser();&#10;&#10;            Intent intent = new Intent(ClienteMainActivity.this, Login_Peluditos.class);&#10;            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;            startActivity(intent);&#10;            finish();&#10;            return true;&#10;        }else if (itemId == R.id.perfil) {&#10;            // Navegación al perfil (sin cerrar esta pantalla para una mejor UX)&#10;            Intent intent = new Intent(this, AdminPerfil.class);&#10;            startActivity(intent);&#10;            return true;&#10;        }&#10;&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/veterinaria/peluditos/Login_Peluditos.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/veterinaria/peluditos/Login_Peluditos.java" />
              <option name="originalContent" value="package com.veterinaria.peluditos;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.text.TextUtils;&#10;import android.util.Patterns;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.Switch;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import com.google.android.gms.tasks.OnCompleteListener;&#10;import com.google.android.gms.tasks.Task;&#10;import com.google.android.material.chip.Chip;&#10;import com.google.firebase.auth.AuthResult;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.auth.FirebaseUser;&#10;import com.google.firebase.firestore.DocumentSnapshot;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;&#10;import java.util.regex.Pattern;&#10;&#10;public class Login_Peluditos extends AppCompatActivity {&#10;&#10;    // 1. Declaramos los elementos de la UI y las instancias de Firebase&#10;    private EditText edtEmail, edtContraseña;&#10;    private Button btnIniciarSesion;&#10;    private Switch switchRecordarme;&#10;    private TextView txtRegistrarme;&#10;&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private SessionManager sessionManager;&#10;&#10;    // Patrón para validar contraseña alfanumérica de mínimo 8 caracteres&#10;    private static final Pattern PASSWORD_PATTERN =&#10;            Pattern.compile(&quot;^(?=.*[0-9])(?=.*[a-zA-Z]).{8,}$&quot;);&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        // El nombre del layout es &quot;login.xml&quot;, así que usamos R.layout.login&#10;        setContentView(R.layout.login);&#10;&#10;        // 2. Inicializamos las instancias de Firebase y SessionManager&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;        sessionManager = new SessionManager(this);&#10;&#10;        // 3. Vinculamos los elementos de la UI con el código usando los IDs de tu XML&#10;        edtEmail = findViewById(R.id.edtEmail);&#10;        edtContraseña = findViewById(R.id.edtContraseña);&#10;        btnIniciarSesion = findViewById(R.id.btnIniciarSesion);&#10;        switchRecordarme = findViewById(R.id.switchRecordarme);&#10;        txtRegistrarme = findViewById(R.id.txtRegistrarme);&#10;&#10;        // 4. Verificar si ya hay una sesión activa&#10;        verificarSesionActiva();&#10;&#10;        // 5. Cargar datos guardados si &quot;Recordarme&quot; estaba activado&#10;        cargarDatosRecordados();&#10;&#10;        // 6. Configurar eventos de click&#10;        btnIniciarSesion.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                String correo = edtEmail.getText().toString().trim();&#10;                String contrasena = edtContraseña.getText().toString().trim();&#10;&#10;                // Validar campos&#10;                if (!validarCampos(correo, contrasena)) {&#10;                    return;&#10;                }&#10;&#10;                // Llamamos a la función para iniciar sesión&#10;                iniciarSesion(correo, contrasena);&#10;            }&#10;        });&#10;&#10;        // 7. Configurar navegación al registro&#10;        txtRegistrarme.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                Intent intent = new Intent(Login_Peluditos.this, RegistrarActivity.class);&#10;                startActivity(intent);&#10;            }&#10;        });&#10;    }&#10;&#10;    private void verificarSesionActiva() {&#10;        if (sessionManager.isLoggedIn()) {&#10;            String userRole = sessionManager.getUserRole();&#10;            navegarSegunRol(userRole);&#10;        }&#10;    }&#10;&#10;    private void cargarDatosRecordados() {&#10;        if (sessionManager.isRememberMeEnabled()) {&#10;            String savedEmail = sessionManager.getSavedEmail();&#10;            edtEmail.setText(savedEmail);&#10;            switchRecordarme.setChecked(true);&#10;        }&#10;    }&#10;&#10;    private boolean validarCampos(String correo, String contrasena) {&#10;        // Validar que los campos no estén vacíos&#10;        if (TextUtils.isEmpty(correo)) {&#10;            edtEmail.setError(&quot;El correo electrónico es requerido&quot;);&#10;            edtEmail.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        // Validar formato de correo&#10;        if (!Patterns.EMAIL_ADDRESS.matcher(correo).matches()) {&#10;            edtEmail.setError(&quot;Ingrese un correo electrónico válido&quot;);&#10;            edtEmail.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(contrasena)) {&#10;            edtContraseña.setError(&quot;La contraseña es requerida&quot;);&#10;            edtContraseña.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        // Validar contraseña (mínimo 8 caracteres, alfanumérica)&#10;        if (!PASSWORD_PATTERN.matcher(contrasena).matches()) {&#10;            edtContraseña.setError(&quot;La contraseña debe tener mínimo 8 caracteres y contener letras y números&quot;);&#10;            edtContraseña.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        return true;&#10;    }&#10;&#10;    private void iniciarSesion(String correo, String contrasena) {&#10;        // Deshabilitar botón durante el proceso&#10;        btnIniciarSesion.setEnabled(false);&#10;        btnIniciarSesion.setText(&quot;Iniciando...&quot;);&#10;&#10;        // 5. Usamos Firebase Authentication para verificar el usuario&#10;        mAuth.signInWithEmailAndPassword(correo, contrasena)&#10;                .addOnCompleteListener(this, new OnCompleteListener&lt;AuthResult&gt;() {&#10;                    @Override&#10;                    public void onComplete(@NonNull Task&lt;AuthResult&gt; task) {&#10;                        btnIniciarSesion.setEnabled(true);&#10;                        btnIniciarSesion.setText(&quot;Iniciar Sesión&quot;);&#10;&#10;                        if (task.isSuccessful()) {&#10;                            // Si la autenticación es exitosa, obtenemos el usuario&#10;                            FirebaseUser user = mAuth.getCurrentUser();&#10;                            // Y ahora, verificamos su rol en Firestore&#10;                            if (user != null) {&#10;                                // Guardar datos si &quot;Recordarme&quot; está activado&#10;                                sessionManager.saveRememberMe(switchRecordarme.isChecked(), correo);&#10;                                verificarRol(user.getUid());&#10;                            }&#10;                        } else {&#10;                            // Si falla, mostramos un error&#10;                            Toast.makeText(Login_Peluditos.this, &quot;Error en la autenticación: &quot; + task.getException().getMessage(), Toast.LENGTH_LONG).show();&#10;                        }&#10;                    }&#10;                });&#10;    }&#10;&#10;    private void verificarRol(String uid) {&#10;        // Primero buscamos el usuario por email para obtener su DUI&#10;        FirebaseUser user = mAuth.getCurrentUser();&#10;        if (user == null || user.getEmail() == null) {&#10;            Toast.makeText(Login_Peluditos.this, &quot;Error: No se pudo obtener la información del usuario&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        db.collection(&quot;usuarios&quot;)&#10;                .whereEqualTo(&quot;email&quot;, user.getEmail())&#10;                .get()&#10;                .addOnCompleteListener(task -&gt; {&#10;                    if (task.isSuccessful() &amp;&amp; !task.getResult().isEmpty()) {&#10;                        // Tomamos el primer documento que coincida con el email&#10;                        DocumentSnapshot document = task.getResult().getDocuments().get(0);&#10;                        String rol = document.getString(&quot;rol&quot;);&#10;&#10;                        // Guardar sesión activa&#10;                        sessionManager.createLoginSession(rol);&#10;&#10;                        // Navegar según el rol&#10;                        navegarSegunRol(rol);&#10;                    } else {&#10;                        Toast.makeText(Login_Peluditos.this,&#10;                            &quot;No se encontraron datos para este usuario.&quot;,&#10;                            Toast.LENGTH_SHORT).show();&#10;                        // Cerrar sesión de Firebase Auth ya que no encontramos los datos en Firestore&#10;                        mAuth.signOut();&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    Toast.makeText(Login_Peluditos.this,&#10;                        &quot;Error al obtener datos: &quot; + e.getMessage(),&#10;                        Toast.LENGTH_SHORT).show();&#10;                });&#10;    }&#10;&#10;    private void navegarSegunRol(String rol) {&#10;        if (&quot;administrador&quot;.equals(rol)) {&#10;            // Si el rol es &quot;administrador&quot;, vamos al flujo de admin&#10;            Toast.makeText(Login_Peluditos.this, &quot;Bienvenido Administrador&quot;, Toast.LENGTH_SHORT).show();&#10;            Intent intent = new Intent(Login_Peluditos.this, admin_home.class);&#10;            startActivity(intent);&#10;            finish(); // Cierra la actividad de login&#10;        } else if (&quot;cliente&quot;.equals(rol)) {&#10;            // Si el rol es &quot;cliente&quot;, vamos al flujo de cliente&#10;            Toast.makeText(Login_Peluditos.this, &quot;Bienvenido Cliente&quot;, Toast.LENGTH_SHORT).show();&#10;            Intent intent = new Intent(Login_Peluditos.this, ClienteMainActivity.class);&#10;            startActivity(intent);&#10;            finish(); // Cierra la actividad de login&#10;        } else {&#10;            // Por si acaso hay un rol no definido&#10;            Toast.makeText(Login_Peluditos.this, &quot;Rol no reconocido.&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.veterinaria.peluditos;&#13;&#10;&#13;&#10;import androidx.annotation.NonNull;&#13;&#10;import androidx.appcompat.app.AppCompatActivity;&#13;&#10;&#13;&#10;import android.content.Intent;&#13;&#10;import android.os.Bundle;&#13;&#10;import android.text.TextUtils;&#13;&#10;import android.util.Patterns;&#13;&#10;import android.view.View;&#13;&#10;import android.widget.Button;&#13;&#10;import android.widget.EditText;&#13;&#10;import android.widget.TextView;&#13;&#10;import android.widget.Toast;&#13;&#10;&#13;&#10;import com.google.android.gms.tasks.OnCompleteListener;&#13;&#10;import com.google.android.gms.tasks.Task;&#13;&#10;import com.google.android.material.chip.Chip;&#13;&#10;import com.google.firebase.auth.AuthResult;&#13;&#10;import com.google.firebase.auth.FirebaseAuth;&#13;&#10;import com.google.firebase.auth.FirebaseUser;&#13;&#10;import com.google.firebase.firestore.DocumentSnapshot;&#13;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#13;&#10;&#13;&#10;import java.util.regex.Pattern;&#13;&#10;&#13;&#10;public class Login_Peluditos extends AppCompatActivity {&#13;&#10;&#13;&#10;    // 1. Declaramos los elementos de la UI y las instancias de Firebase&#13;&#10;    private EditText edtEmail, edtContraseña;&#13;&#10;    private Button btnIniciarSesion;&#13;&#10;    private Chip chipRecordarme;&#13;&#10;    private TextView txtRegistrarme;&#13;&#10;&#13;&#10;    private FirebaseAuth mAuth;&#13;&#10;    private FirebaseFirestore db;&#13;&#10;    private SessionManager sessionManager;&#13;&#10;&#13;&#10;    // Patrón para validar contraseña alfanumérica de mínimo 8 caracteres&#13;&#10;    private static final Pattern PASSWORD_PATTERN =&#13;&#10;            Pattern.compile(&quot;^(?=.*[0-9])(?=.*[a-zA-Z]).{8,}$&quot;);&#13;&#10;&#13;&#10;    @Override&#13;&#10;    protected void onCreate(Bundle savedInstanceState) {&#13;&#10;        super.onCreate(savedInstanceState);&#13;&#10;        // El nombre del layout es &quot;login.xml&quot;, así que usamos R.layout.login&#13;&#10;        setContentView(R.layout.login);&#13;&#10;&#13;&#10;        // 2. Inicializamos las instancias de Firebase y SessionManager&#13;&#10;        mAuth = FirebaseAuth.getInstance();&#13;&#10;        db = FirebaseFirestore.getInstance();&#13;&#10;        sessionManager = new SessionManager(this);&#13;&#10;&#13;&#10;        // 3. Vinculamos los elementos de la UI con el código usando los IDs de tu XML&#13;&#10;        edtEmail = findViewById(R.id.edtEmail);&#13;&#10;        edtContraseña = findViewById(R.id.edtContraseña);&#13;&#10;        btnIniciarSesion = findViewById(R.id.btnIniciarSesion);&#13;&#10;        chipRecordarme = findViewById(R.id.chipRecordarme);&#13;&#10;        txtRegistrarme = findViewById(R.id.txtRegistrarme);&#13;&#10;&#13;&#10;        // 4. Verificar si ya hay una sesión activa&#13;&#10;        verificarSesionActiva();&#13;&#10;&#13;&#10;        // 5. Cargar datos guardados si &quot;Recordarme&quot; estaba activado&#13;&#10;        cargarDatosRecordados();&#13;&#10;&#13;&#10;        // 6. Configurar eventos de click&#13;&#10;        btnIniciarSesion.setOnClickListener(new View.OnClickListener() {&#13;&#10;            @Override&#13;&#10;            public void onClick(View v) {&#13;&#10;                String correo = edtEmail.getText().toString().trim();&#13;&#10;                String contrasena = edtContraseña.getText().toString().trim();&#13;&#10;&#13;&#10;                // Validar campos&#13;&#10;                if (!validarCampos(correo, contrasena)) {&#13;&#10;                    return;&#13;&#10;                }&#13;&#10;&#13;&#10;                // Llamamos a la función para iniciar sesión&#13;&#10;                iniciarSesion(correo, contrasena);&#13;&#10;            }&#13;&#10;        });&#13;&#10;&#13;&#10;        // 7. Configurar navegación al registro&#13;&#10;        txtRegistrarme.setOnClickListener(new View.OnClickListener() {&#13;&#10;            @Override&#13;&#10;            public void onClick(View v) {&#13;&#10;                Intent intent = new Intent(Login_Peluditos.this, RegistrarActivity.class);&#13;&#10;                startActivity(intent);&#13;&#10;            }&#13;&#10;        });&#13;&#10;    }&#13;&#10;&#13;&#10;    private void verificarSesionActiva() {&#13;&#10;        if (sessionManager.isLoggedIn()) {&#13;&#10;            String userRole = sessionManager.getUserRole();&#13;&#10;            navegarSegunRol(userRole);&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    private void cargarDatosRecordados() {&#13;&#10;        if (sessionManager.isRememberMeEnabled()) {&#13;&#10;            String savedEmail = sessionManager.getSavedEmail();&#13;&#10;            edtEmail.setText(savedEmail);&#13;&#10;            chipRecordarme.setChecked(true);&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    private boolean validarCampos(String correo, String contrasena) {&#13;&#10;        // Validar que los campos no estén vacíos&#13;&#10;        if (TextUtils.isEmpty(correo)) {&#13;&#10;            edtEmail.setError(&quot;El correo electrónico es requerido&quot;);&#13;&#10;            edtEmail.requestFocus();&#13;&#10;            return false;&#13;&#10;        }&#13;&#10;&#13;&#10;        // Validar formato de correo&#13;&#10;        if (!Patterns.EMAIL_ADDRESS.matcher(correo).matches()) {&#13;&#10;            edtEmail.setError(&quot;Ingrese un correo electrónico válido&quot;);&#13;&#10;            edtEmail.requestFocus();&#13;&#10;            return false;&#13;&#10;        }&#13;&#10;&#13;&#10;        if (TextUtils.isEmpty(contrasena)) {&#13;&#10;            edtContraseña.setError(&quot;La contraseña es requerida&quot;);&#13;&#10;            edtContraseña.requestFocus();&#13;&#10;            return false;&#13;&#10;        }&#13;&#10;&#13;&#10;        // Validar contraseña (mínimo 8 caracteres, alfanumérica)&#13;&#10;        if (!PASSWORD_PATTERN.matcher(contrasena).matches()) {&#13;&#10;            edtContraseña.setError(&quot;La contraseña debe tener mínimo 8 caracteres y contener letras y números&quot;);&#13;&#10;            edtContraseña.requestFocus();&#13;&#10;            return false;&#13;&#10;        }&#13;&#10;&#13;&#10;        return true;&#13;&#10;    }&#13;&#10;&#13;&#10;    private void iniciarSesion(String correo, String contrasena) {&#13;&#10;        // Deshabilitar botón durante el proceso&#13;&#10;        btnIniciarSesion.setEnabled(false);&#13;&#10;        btnIniciarSesion.setText(&quot;Iniciando...&quot;);&#13;&#10;&#13;&#10;        // 5. Usamos Firebase Authentication para verificar el usuario&#13;&#10;        mAuth.signInWithEmailAndPassword(correo, contrasena)&#13;&#10;                .addOnCompleteListener(this, new OnCompleteListener&lt;AuthResult&gt;() {&#13;&#10;                    @Override&#13;&#10;                    public void onComplete(@NonNull Task&lt;AuthResult&gt; task) {&#13;&#10;                        btnIniciarSesion.setEnabled(true);&#13;&#10;                        btnIniciarSesion.setText(&quot;Iniciar Sesión&quot;);&#13;&#10;&#13;&#10;                        if (task.isSuccessful()) {&#13;&#10;                            // Si la autenticación es exitosa, obtenemos el usuario&#13;&#10;                            FirebaseUser user = mAuth.getCurrentUser();&#13;&#10;                            // Y ahora, verificamos su rol en Firestore&#13;&#10;                            if (user != null) {&#13;&#10;                                // Guardar datos si &quot;Recordarme&quot; está activado&#13;&#10;                                sessionManager.saveRememberMe(chipRecordarme.isChecked(), correo);&#13;&#10;                                verificarRol(user.getUid());&#13;&#10;                            }&#13;&#10;                        } else {&#13;&#10;                            // Si falla, mostramos un error&#13;&#10;                            Toast.makeText(Login_Peluditos.this, &quot;Error en la autenticación: &quot; + task.getException().getMessage(), Toast.LENGTH_LONG).show();&#13;&#10;                        }&#13;&#10;                    }&#13;&#10;                });&#13;&#10;    }&#13;&#10;&#13;&#10;    private void verificarRol(String uid) {&#13;&#10;        // Primero buscamos el usuario por email para obtener su DUI&#13;&#10;        FirebaseUser user = mAuth.getCurrentUser();&#13;&#10;        if (user == null || user.getEmail() == null) {&#13;&#10;            Toast.makeText(Login_Peluditos.this, &quot;Error: No se pudo obtener la información del usuario&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;            return;&#13;&#10;        }&#13;&#10;&#13;&#10;        db.collection(&quot;usuarios&quot;)&#13;&#10;                .whereEqualTo(&quot;email&quot;, user.getEmail())&#13;&#10;                .get()&#13;&#10;                .addOnCompleteListener(task -&gt; {&#13;&#10;                    if (task.isSuccessful() &amp;&amp; !task.getResult().isEmpty()) {&#13;&#10;                        // Tomamos el primer documento que coincida con el email&#13;&#10;                        DocumentSnapshot document = task.getResult().getDocuments().get(0);&#13;&#10;                        String rol = document.getString(&quot;rol&quot;);&#13;&#10;&#13;&#10;                        // Guardar sesión activa&#13;&#10;                        sessionManager.createLoginSession(rol);&#13;&#10;&#13;&#10;                        // Navegar según el rol&#13;&#10;                        navegarSegunRol(rol);&#13;&#10;                    } else {&#13;&#10;                        Toast.makeText(Login_Peluditos.this,&#13;&#10;                            &quot;No se encontraron datos para este usuario.&quot;,&#13;&#10;                            Toast.LENGTH_SHORT).show();&#13;&#10;                        // Cerrar sesión de Firebase Auth ya que no encontramos los datos en Firestore&#13;&#10;                        mAuth.signOut();&#13;&#10;                    }&#13;&#10;                })&#13;&#10;                .addOnFailureListener(e -&gt; {&#13;&#10;                    Toast.makeText(Login_Peluditos.this,&#13;&#10;                        &quot;Error al obtener datos: &quot; + e.getMessage(),&#13;&#10;                        Toast.LENGTH_SHORT).show();&#13;&#10;                });&#13;&#10;    }&#13;&#10;&#13;&#10;    private void navegarSegunRol(String rol) {&#13;&#10;        if (&quot;administrador&quot;.equals(rol)) {&#13;&#10;            // Si el rol es &quot;administrador&quot;, vamos al flujo de admin&#13;&#10;            Toast.makeText(Login_Peluditos.this, &quot;Bienvenido Administrador&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;            Intent intent = new Intent(Login_Peluditos.this, admin_home.class);&#13;&#10;            startActivity(intent);&#13;&#10;            finish(); // Cierra la actividad de login&#13;&#10;        } else if (&quot;cliente&quot;.equals(rol)) {&#13;&#10;            // Si el rol es &quot;cliente&quot;, vamos al flujo de cliente&#13;&#10;            Toast.makeText(Login_Peluditos.this, &quot;Bienvenido Cliente&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;            Intent intent = new Intent(Login_Peluditos.this, ClienteMainActivity.class);&#13;&#10;            startActivity(intent);&#13;&#10;            finish(); // Cierra la actividad de login&#13;&#10;        } else {&#13;&#10;            // Por si acaso hay un rol no definido&#13;&#10;            Toast.makeText(Login_Peluditos.this, &quot;Rol no reconocido.&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;        }&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/color/chip_background_color.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/color/chip_background_color.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;item android:color=&quot;#38E07A&quot; android:state_checked=&quot;true&quot;/&gt;&#10;    &lt;item android:color=&quot;#9EB8A8&quot; android:state_checked=&quot;false&quot;/&gt;&#10;&lt;/selector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/login.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/login.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;?attr/colorSurface&quot;&#10;    android:paddingStart=&quot;24dp&quot;&#10;    android:paddingEnd=&quot;24dp&quot;&gt;&#10;&#10;    &lt;!-- 1. Altura de la imagen reducida para dar más espacio al formulario --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/imgLogin&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintHeight_percent=&quot;0.45&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:srcCompat=&quot;@drawable/login&quot; /&gt;&#10;&#10;    &lt;!-- 2. Grupo de elementos encadenados para que se adapten verticalmente --&gt;&#10;    &#10;    &lt;!-- Título para el campo de correo --&gt;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/txtCorreo&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:fontFamily=&quot;@font/spline_sans_medium&quot;&#10;        android:text=&quot;Correo electrónico&quot;&#10;        android:textColor=&quot;?attr/colorOnSurface&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/imgLogin&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/edtEmail&quot;&#10;        app:layout_constraintVertical_chainStyle=&quot;packed&quot; /&gt;&#10;&#10;    &lt;!-- Campo de texto para el correo --&gt;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/edtEmail&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;56dp&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:background=&quot;@drawable/edittext_bg&quot;&#10;        android:ems=&quot;10&quot;&#10;        android:fontFamily=&quot;@font/spline_sans&quot;&#10;        android:hint=&quot;ejemplo@correo.com&quot;&#10;        android:inputType=&quot;textEmailAddress&quot;&#10;        android:paddingStart=&quot;16dp&quot;&#10;        android:paddingEnd=&quot;16dp&quot;&#10;        android:textColorHint=&quot;#9EB8A8&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/txtCorreo&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/txtContraseña&quot; /&gt;&#10;&#10;    &lt;!-- Título para la contraseña --&gt;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/txtContraseña&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:fontFamily=&quot;@font/spline_sans_medium&quot;&#10;        android:text=&quot;Contraseña&quot;&#10;        android:textColor=&quot;?attr/colorOnSurface&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/edtEmail&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/layoutContraseña&quot; /&gt;&#10;&#10;    &lt;!-- TextInputLayout que envuelve el EditText para añadir el icono del ojo --&gt;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:id=&quot;@+id/layoutContraseña&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;56dp&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        app:hintEnabled=&quot;false&quot; &#10;        app:passwordToggleEnabled=&quot;true&quot;&#10;        app:passwordToggleTint=&quot;#9EB8A8&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/txtContraseña&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/switchRecordarme&quot;&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/edtContraseña&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:background=&quot;@drawable/edittext_bg&quot;&#10;            android:fontFamily=&quot;@font/spline_sans&quot;&#10;            android:hint=&quot;********&quot;&#10;            android:inputType=&quot;textPassword&quot;&#10;            android:paddingStart=&quot;16dp&quot;&#10;            android:paddingEnd=&quot;16dp&quot;&#10;            android:textColorHint=&quot;#9EB8A8&quot;/&gt;&#10;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;!-- 3. Switch y TextView en la misma línea para ahorrar espacio --&gt;&#10;    &lt;Switch&#10;        android:id=&quot;@+id/switchRecordarme&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:fontFamily=&quot;@font/spline_sans&quot;&#10;        android:text=&quot;Recordarme&quot;&#10;        android:textColor=&quot;?attr/colorOnSurface&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:thumbTint=&quot;@color/switch_thumb_color&quot;&#10;        android:trackTint=&quot;@color/switch_track_color&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/layoutContraseña&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/txtRegistrarme&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/txtOlvidarContraseña&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;?android:attr/selectableItemBackground&quot;&#10;        android:clickable=&quot;true&quot;&#10;        android:focusable=&quot;true&quot;&#10;        android:fontFamily=&quot;@font/spline_sans_medium&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        android:text=&quot;Olvidé mi Contraseña&quot;&#10;        android:textColor=&quot;#38E07A&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;@+id/switchRecordarme&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;@+id/switchRecordarme&quot; /&gt;&#10;&#10;    &lt;!-- Botón &quot;Registrarme&quot; --&gt;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/txtRegistrarme&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:background=&quot;?android:attr/selectableItemBackground&quot;&#10;        android:clickable=&quot;true&quot;&#10;        android:focusable=&quot;true&quot;&#10;        android:fontFamily=&quot;@font/spline_sans_medium&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        android:text=&quot;¿No tienes cuenta? Registrarme&quot;&#10;        android:textColor=&quot;#38E07A&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/switchRecordarme&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/btnIniciarSesion&quot;/&gt;&#10;&#10;    &lt;!-- Botón de Iniciar Sesión, anclado a la parte inferior --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnIniciarSesion&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;56dp&quot;&#10;        android:layout_marginBottom=&quot;32dp&quot;&#10;        android:backgroundTint=&quot;#38E07A&quot;&#10;        android:fontFamily=&quot;@font/spline_sans_bold&quot;&#10;        android:text=&quot;Iniciar Sesión&quot;&#10;        android:textColor=&quot;#121714&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        app:cornerRadius=&quot;28dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#13;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#13;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#13;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#13;&#10;    android:layout_width=&quot;match_parent&quot;&#13;&#10;    android:layout_height=&quot;match_parent&quot;&#13;&#10;    android:background=&quot;?attr/colorSurface&quot;&#13;&#10;    android:paddingStart=&quot;24dp&quot;&#13;&#10;    android:paddingEnd=&quot;24dp&quot;&gt;&#13;&#10;&#13;&#10;    &lt;!-- 1. Altura de la imagen reducida para dar más espacio al formulario --&gt;&#13;&#10;    &lt;ImageView&#13;&#10;        android:id=&quot;@+id/imgLogin&quot;&#13;&#10;        android:layout_width=&quot;0dp&quot;&#13;&#10;        android:layout_height=&quot;0dp&quot;&#13;&#10;        android:scaleType=&quot;centerCrop&quot;&#13;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintHeight_percent=&quot;0.45&quot;&#13;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#13;&#10;        app:srcCompat=&quot;@drawable/login&quot; /&gt;&#13;&#10;&#13;&#10;    &lt;!-- 2. Grupo de elementos encadenados para que se adapten verticalmente --&gt;&#13;&#10;    &#13;&#10;    &lt;!-- Título para el campo de correo --&gt;&#13;&#10;    &lt;TextView&#13;&#10;        android:id=&quot;@+id/txtCorreo&quot;&#13;&#10;        android:layout_width=&quot;0dp&quot;&#13;&#10;        android:layout_height=&quot;wrap_content&quot;&#13;&#10;        android:layout_marginTop=&quot;16dp&quot;&#13;&#10;        android:fontFamily=&quot;@font/spline_sans_medium&quot;&#13;&#10;        android:text=&quot;Correo electrónico&quot;&#13;&#10;        android:textColor=&quot;?attr/colorOnSurface&quot;&#13;&#10;        android:textSize=&quot;20sp&quot;&#13;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/imgLogin&quot;&#13;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/edtEmail&quot;&#13;&#10;        app:layout_constraintVertical_chainStyle=&quot;packed&quot; /&gt;&#13;&#10;&#13;&#10;    &lt;!-- Campo de texto para el correo --&gt;&#13;&#10;    &lt;EditText&#13;&#10;        android:id=&quot;@+id/edtEmail&quot;&#13;&#10;        android:layout_width=&quot;0dp&quot;&#13;&#10;        android:layout_height=&quot;56dp&quot;&#13;&#10;        android:layout_marginTop=&quot;8dp&quot;&#13;&#10;        android:background=&quot;@drawable/edittext_bg&quot;&#13;&#10;        android:ems=&quot;10&quot;&#13;&#10;        android:fontFamily=&quot;@font/spline_sans&quot;&#13;&#10;        android:hint=&quot;ejemplo@correo.com&quot;&#13;&#10;        android:inputType=&quot;textEmailAddress&quot;&#13;&#10;        android:paddingStart=&quot;16dp&quot;&#13;&#10;        android:paddingEnd=&quot;16dp&quot;&#13;&#10;        android:textColorHint=&quot;#9EB8A8&quot;&#13;&#10;        android:textSize=&quot;20sp&quot;&#13;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/txtCorreo&quot;&#13;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/txtContraseña&quot; /&gt;&#13;&#10;&#13;&#10;    &lt;!-- Título para la contraseña --&gt;&#13;&#10;    &lt;TextView&#13;&#10;        android:id=&quot;@+id/txtContraseña&quot;&#13;&#10;        android:layout_width=&quot;0dp&quot;&#13;&#10;        android:layout_height=&quot;wrap_content&quot;&#13;&#10;        android:layout_marginTop=&quot;16dp&quot;&#13;&#10;        android:fontFamily=&quot;@font/spline_sans_medium&quot;&#13;&#10;        android:text=&quot;Contraseña&quot;&#13;&#10;        android:textColor=&quot;?attr/colorOnSurface&quot;&#13;&#10;        android:textSize=&quot;20sp&quot;&#13;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/edtEmail&quot;&#13;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/layoutContraseña&quot; /&gt;&#13;&#10;&#13;&#10;    &lt;!-- TextInputLayout que envuelve el EditText para añadir el icono del ojo --&gt;&#13;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#13;&#10;        android:id=&quot;@+id/layoutContraseña&quot;&#13;&#10;        android:layout_width=&quot;0dp&quot;&#13;&#10;        android:layout_height=&quot;56dp&quot;&#13;&#10;        android:layout_marginTop=&quot;8dp&quot;&#13;&#10;        app:hintEnabled=&quot;false&quot; &#13;&#10;        app:passwordToggleEnabled=&quot;true&quot;&#13;&#10;        app:passwordToggleTint=&quot;#9EB8A8&quot;&#13;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/txtContraseña&quot;&#13;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/chipRecordarme&quot;&gt;&#13;&#10;&#13;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#13;&#10;            android:id=&quot;@+id/edtContraseña&quot;&#13;&#10;            android:layout_width=&quot;match_parent&quot;&#13;&#10;            android:layout_height=&quot;match_parent&quot;&#13;&#10;            android:background=&quot;@drawable/edittext_bg&quot;&#13;&#10;            android:fontFamily=&quot;@font/spline_sans&quot;&#13;&#10;            android:hint=&quot;********&quot;&#13;&#10;            android:inputType=&quot;textPassword&quot;&#13;&#10;            android:paddingStart=&quot;16dp&quot;&#13;&#10;            android:paddingEnd=&quot;16dp&quot;&#13;&#10;            android:textColorHint=&quot;#9EB8A8&quot;/&gt;&#13;&#10;&#13;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#13;&#10;&#13;&#10;    &lt;com.google.android.material.chip.Chip&#13;&#10;        android:id=&quot;@+id/chipRecordarme&quot;&#13;&#10;        android:layout_width=&quot;wrap_content&quot;&#13;&#10;        android:layout_height=&quot;wrap_content&quot;&#13;&#10;        android:layout_marginTop=&quot;16dp&quot;&#13;&#10;        android:text=&quot;Recordarme&quot;&#13;&#10;        android:textColor=&quot;@color/textColorPrimary&quot;&#13;&#10;        android:checkable=&quot;true&quot;&#13;&#10;        app:chipBackgroundColor=&quot;@color/chip_background_color&quot;&#13;&#10;        app:chipStrokeColor=&quot;#9EB8A8&quot;&#13;&#10;        app:chipStrokeWidth=&quot;1dp&quot;&#13;&#10;        android:fontFamily=&quot;@font/spline_sans&quot;&#13;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/layoutContraseña&quot;&#13;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/btnIniciarSesion&quot; /&gt;&#13;&#10;&#13;&#10;    &lt;TextView&#13;&#10;        android:id=&quot;@+id/txtOlvidarContraseña&quot;&#13;&#10;        android:layout_width=&quot;wrap_content&quot;&#13;&#10;        android:layout_height=&quot;wrap_content&quot;&#13;&#10;        android:background=&quot;?android:attr/selectableItemBackground&quot;&#13;&#10;        android:clickable=&quot;true&quot;&#13;&#10;        android:focusable=&quot;true&quot;&#13;&#10;        android:fontFamily=&quot;@font/spline_sans_medium&quot;&#13;&#10;        android:padding=&quot;8dp&quot;&#13;&#10;        android:text=&quot;Olvidé mi Contraseña&quot;&#13;&#10;        android:textColor=&quot;#38E07A&quot;&#13;&#10;        android:textSize=&quot;16sp&quot;&#13;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintTop_toTopOf=&quot;@+id/chipRecordarme&quot;&#13;&#10;        app:layout_constraintBottom_toBottomOf=&quot;@+id/chipRecordarme&quot; /&gt;&#13;&#10;&#13;&#10;    &lt;!-- Botón &quot;Registrarme&quot; --&gt;&#13;&#10;    &lt;TextView&#13;&#10;        android:id=&quot;@+id/txtRegistrarme&quot;&#13;&#10;        android:layout_width=&quot;wrap_content&quot;&#13;&#10;        android:layout_height=&quot;wrap_content&quot;&#13;&#10;        android:layout_marginTop=&quot;16dp&quot;&#13;&#10;        android:background=&quot;?android:attr/selectableItemBackground&quot;&#13;&#10;        android:clickable=&quot;true&quot;&#13;&#10;        android:focusable=&quot;true&quot;&#13;&#10;        android:fontFamily=&quot;@font/spline_sans_medium&quot;&#13;&#10;        android:padding=&quot;8dp&quot;&#13;&#10;        android:text=&quot;¿No tienes cuenta? Registrarme&quot;&#13;&#10;        android:textColor=&quot;#38E07A&quot;&#13;&#10;        android:textSize=&quot;16sp&quot;&#13;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/chipRecordarme&quot;&#13;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/btnIniciarSesion&quot;/&gt;&#13;&#10;&#13;&#10;    &lt;!-- Botón de Iniciar Sesión, anclado a la parte inferior --&gt;&#13;&#10;    &lt;Button&#13;&#10;        android:id=&quot;@+id/btnIniciarSesion&quot;&#13;&#10;        android:layout_width=&quot;0dp&quot;&#13;&#10;        android:layout_height=&quot;56dp&quot;&#13;&#10;        android:layout_marginBottom=&quot;32dp&quot;&#13;&#10;        android:backgroundTint=&quot;#38E07A&quot;&#13;&#10;        android:fontFamily=&quot;@font/spline_sans_bold&quot;&#13;&#10;        android:text=&quot;Iniciar Sesión&quot;&#13;&#10;        android:textColor=&quot;#121714&quot;&#13;&#10;        android:textSize=&quot;20sp&quot;&#13;&#10;        app:cornerRadius=&quot;28dp&quot;&#13;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#13;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot; /&gt;&#13;&#10;&#13;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>